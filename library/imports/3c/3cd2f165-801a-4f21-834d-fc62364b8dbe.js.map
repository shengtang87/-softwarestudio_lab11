{"version":3,"sources":["assets\\Scripts\\Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameMgr from \"./GameMgr\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Player extends cc.Component \r\n{\r\n    @property()\r\n    playerSpeed: number = 300;\r\n\r\n    @property({type:cc.AudioClip})\r\n    dieSound: cc.AudioClip = null;\r\n\r\n    @property(cc.Node)\r\n    gameMgr: cc.Node = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    jumpFrame: cc.SpriteFrame = null;\r\n\r\n    fallDown: boolean = false;\r\n\r\n    private anim: cc.Animation = null;\r\n\r\n    private moveDir = 1;\r\n\r\n    private rebornPos: cc.Vec2 = cc.v2(0, -146);\r\n\r\n    private rb: cc.RigidBody = null;\r\n\r\n\r\n    start () {\r\n        this.anim = this.getComponent(cc.Animation);\r\n        this.rb = this.getComponent(cc.RigidBody);\r\n    }\r\n\r\n    update(dt)\r\n    {\r\n        this.node.x += this.playerSpeed * this.moveDir * dt;\r\n        this.node.scaleX = (this.moveDir >= 0) ? 1 : -1;\r\n\r\n        // raycast: check whether the player is standing on the platform?\r\n        let point1 = this.node.position;\r\n        point1.addSelf(cc.v2(12, 2));\r\n        point1 = this.node.parent.convertToWorldSpaceAR(point1);\r\n        let point2 = this.node.position;\r\n        point2.addSelf(cc.v2(-12, 2));\r\n        point2 = this.node.parent.convertToWorldSpaceAR(point2);\r\n        let isHit = this.raycastTest(point1, cc.v2(0, -5)) || this.raycastTest(point2, cc.v2(0, -5));\r\n        // if(isHit){\r\n        //     if(this.fallDown){\r\n        //         this.gameMgr.getComponent(\"GameMgr\").updateEnergyBar(0);\r\n        //         this.fallDown = false;\r\n        //     }\r\n        // }else{\r\n        //     this.fallDown = true;\r\n        // }\r\n        this.fallDown = !isHit;\r\n\r\n        this.playerAnimation();\r\n    }\r\n\r\n    raycastTest(start: cc.Vec2, direction: cc.Vec2){\r\n        let result = this.gameMgr.getComponent(\"GameMgr\").physicManager.rayCast(start, start.add(direction), cc.RayCastType.AllClosest);\r\n        for(let i = 0; i < result.length; i++)\r\n        {\r\n            let colliderName = result[i].collider.node.name;\r\n            if(colliderName != this.node.name)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    reborn()\r\n    {\r\n        this.node.position = this.rebornPos;\r\n        this.getComponent(cc.RigidBody).linearVelocity = cc.v2();\r\n    }\r\n\r\n    playerJump(velocity: number)\r\n    {\r\n        if(!this.fallDown)\r\n            this.node.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, velocity);\r\n    }\r\n\r\n    playerDie()\r\n    {\r\n        cc.audioEngine.playEffect(this.dieSound,false);\r\n    }\r\n\r\n    playerAnimation()\r\n    {\r\n        if(this.fallDown)\r\n        {\r\n            this.anim.stop();\r\n            this.node.getChildByName('effect').active = false;\r\n            this.getComponent(cc.Sprite).spriteFrame = this.jumpFrame;\r\n        }\r\n        else\r\n        {\r\n            if(this.gameMgr.getComponent(\"GameMgr\").gathering)\r\n            {\r\n                if(!this.anim.getAnimationState('gather').isPlaying)\r\n                {\r\n                    this.node.getChildByName('effect').active = true;\r\n                    this.anim.play('gather');\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(!this.anim.getAnimationState('walk').isPlaying)\r\n                {\r\n                    if(!this.anim.getAnimationState('gather').isPlaying){\r\n                        this.gameMgr.getComponent(\"GameMgr\").updateEnergyBar(0);\r\n                    }\r\n\r\n                    this.node.getChildByName('effect').active = false;\r\n                    this.anim.play('walk');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onBeginContact(contact, selfCollider, otherCollider)\r\n    {\r\n        if(otherCollider.node.name == \"wall\")\r\n        {\r\n            this.moveDir *= -1;\r\n        }\r\n    }\r\n}\r\n"]}